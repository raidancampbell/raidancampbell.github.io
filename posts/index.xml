<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on raidancampbell</title>
    <link>https://raidancampbell.com/posts/</link>
    <description>Recent content in Posts on raidancampbell</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 25 May 2020 10:29:46 -0700</lastBuildDate>
    
	<atom:link href="https://raidancampbell.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Abusing Context in Go Part I: Serialization</title>
      <link>https://raidancampbell.com/posts/abusing-context-part-i/</link>
      <pubDate>Mon, 25 May 2020 10:29:46 -0700</pubDate>
      
      <guid>https://raidancampbell.com/posts/abusing-context-part-i/</guid>
      <description>At the extreme end of microservice architecture, network communication becomes the substitution for function calls. This change forces many compromises in Go, mostly because everything sent across the network must be able to be serialized and deserialized. Luckily, the Go standard library includes an encoding package, which handles most serialization use cases.
For most use cases encoding data via JSON will work. JSON is a rock-solid &amp;ldquo;good enough&amp;rdquo; and ubiquitous solution.</description>
    </item>
    
    <item>
      <title>Design Considerations for Context in Go</title>
      <link>https://raidancampbell.com/posts/context-in-go/</link>
      <pubDate>Fri, 22 May 2020 14:58:47 -0700</pubDate>
      
      <guid>https://raidancampbell.com/posts/context-in-go/</guid>
      <description>A brief introduction to Context  &amp;ldquo;Package context defines the Context type, which carries deadlines, cancellation signals, and other request-scoped values across API boundaries and between processes.&amp;rdquo; - golang.org
 Context in Go is often critiqued for handling two distinct scenarios under one tool: cancellation and scoped data. While I tend to agree, this post is aimed to inform rather than persuade.
Contexts are derived: each child context is made by adding additional cancellations or values from its parent.</description>
    </item>
    
  </channel>
</rss>