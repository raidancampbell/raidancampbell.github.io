<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>raidancampbell</title>
    <link>https://raidancampbell.com/</link>
    <description>Recent content on raidancampbell</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 04 Jun 2020 16:31:47 -0700</lastBuildDate>
    
	<atom:link href="https://raidancampbell.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Abusing Context in Go Part II: Recovery</title>
      <link>https://raidancampbell.com/posts/abusing-context-part-ii/</link>
      <pubDate>Thu, 04 Jun 2020 16:31:47 -0700</pubDate>
      
      <guid>https://raidancampbell.com/posts/abusing-context-part-ii/</guid>
      <description>A method for recovering context in Go that was omitted somewhere up the callstack</description>
    </item>
    
    <item>
      <title>Abusing Context in Go Part I: Serialization</title>
      <link>https://raidancampbell.com/posts/abusing-context-part-i/</link>
      <pubDate>Mon, 25 May 2020 10:29:46 -0700</pubDate>
      
      <guid>https://raidancampbell.com/posts/abusing-context-part-i/</guid>
      <description>A method for serializing context to allow it to flow between networked hosts</description>
    </item>
    
    <item>
      <title>Design Considerations for Context in Go</title>
      <link>https://raidancampbell.com/posts/context-in-go/</link>
      <pubDate>Fri, 22 May 2020 14:58:47 -0700</pubDate>
      
      <guid>https://raidancampbell.com/posts/context-in-go/</guid>
      <description>An overview on design paradigms for golang&amp;rsquo;s context library</description>
    </item>
    
  </channel>
</rss>